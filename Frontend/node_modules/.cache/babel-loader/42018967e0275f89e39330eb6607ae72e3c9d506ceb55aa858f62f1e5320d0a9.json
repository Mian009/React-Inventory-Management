{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultHead = defaultHead;\nexports.default = void 0;\nvar _extends = require(\"@swc/helpers/lib/_extends.js\").default;\nvar _interop_require_default = require(\"@swc/helpers/lib/_interop_require_default.js\").default;\nvar _interop_require_wildcard = require(\"@swc/helpers/lib/_interop_require_wildcard.js\").default;\nvar _react = _interop_require_wildcard(require(\"react\"));\nvar _sideEffect = _interop_require_default(require(\"./side-effect\"));\nvar _ampContext = require(\"./amp-context\");\nvar _headManagerContext = require(\"./head-manager-context\");\nvar _ampMode = require(\"./amp-mode\");\nvar _warnOnce = require(\"./utils/warn-once\");\nfunction defaultHead() {\n  let inAmpMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const head = [/*#__PURE__*/_react.default.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  })];\n  if (!inAmpMode) {\n    head.push( /*#__PURE__*/_react.default.createElement(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width\"\n    }));\n  }\n  return head;\n}\nfunction onlyReactElement(list, child) {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list;\n  }\n  // Adds support for React.Fragment\n  if (child.type === _react.default.Fragment) {\n    return list.concat(_react.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild) => {\n      if (typeof fragmentChild === 'string' || typeof fragmentChild === 'number') {\n        return fragmentList;\n      }\n      return fragmentList.concat(fragmentChild);\n    }, []));\n  }\n  return list.concat(child);\n}\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp'];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set();\n  const tags = new Set();\n  const metaTypes = new Set();\n  const metaCategories = {};\n  return h => {\n    let isUnique = true;\n    let hasKey = false;\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true;\n      const key = h.key.slice(h.key.indexOf('$') + 1);\n      if (keys.has(key)) {\n        isUnique = false;\n      } else {\n        keys.add(key);\n      }\n    }\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false;\n        } else {\n          tags.add(h.type);\n        }\n        break;\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i];\n          if (!h.props.hasOwnProperty(metatype)) continue;\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false;\n            } else {\n              metaTypes.add(metatype);\n            }\n          } else {\n            const category = h.props[metatype];\n            const categories = metaCategories[metatype] || new Set();\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false;\n            } else {\n              categories.add(category);\n              metaCategories[metatype] = categories;\n            }\n          }\n        }\n        break;\n    }\n    return isUnique;\n  };\n}\n/**\n *\n * @param headChildrenElements List of children of <Head>\n */\nfunction reduceComponents(headChildrenElements, props) {\n  const {\n    inAmpMode\n  } = props;\n  return headChildrenElements.reduce(onlyReactElement, []).reverse().concat(defaultHead(inAmpMode).reverse()).filter(unique()).reverse().map((c, i) => {\n    const key = c.key || i;\n    if (process.env.NODE_ENV !== 'development' && process.env.__NEXT_OPTIMIZE_FONTS && !inAmpMode) {\n      if (c.type === 'link' && c.props['href'] &&\n      // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n      ['https://fonts.googleapis.com/css', 'https://use.typekit.net/'].some(url => c.props['href'].startsWith(url))) {\n        const newProps = _extends({}, c.props || {});\n        newProps['data-href'] = newProps['href'];\n        newProps['href'] = undefined;\n        // Add this attribute to make it easy to identify optimized tags\n        newProps['data-optimized-fonts'] = true;\n        return /*#__PURE__*/_react.default.cloneElement(c, newProps);\n      }\n    }\n    if (process.env.NODE_ENV === 'development') {\n      // omit JSON-LD structured data snippets from the warning\n      if (c.type === 'script' && c.props['type'] !== 'application/ld+json') {\n        const srcMessage = c.props['src'] ? `<script> tag with src=\"${c.props['src']}\"` : `inline <script>`;\n        (0, _warnOnce).warnOnce(`Do not add <script> tags using next/head (see ${srcMessage}). Use next/script instead. \\nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component`);\n      } else if (c.type === 'link' && c.props['rel'] === 'stylesheet') {\n        (0, _warnOnce).warnOnce(`Do not add stylesheets using next/head (see <link rel=\"stylesheet\"> tag with href=\"${c.props['href']}\"). Use Document instead. \\nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component`);\n      }\n    }\n    return /*#__PURE__*/_react.default.cloneElement(c, {\n      key\n    });\n  });\n}\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head(_ref) {\n  let {\n    children\n  } = _ref;\n  const ampState = (0, _react).useContext(_ampContext.AmpStateContext);\n  const headManager = (0, _react).useContext(_headManagerContext.HeadManagerContext);\n  return /*#__PURE__*/_react.default.createElement(_sideEffect.default, {\n    reduceComponentsToState: reduceComponents,\n    headManager: headManager,\n    inAmpMode: (0, _ampMode).isInAmpMode(ampState)\n  }, children);\n}\nvar _default = Head;\nexports.default = _default;\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;AAEkC,6BAAO;AACtB,sCAAe,gBAAf;AACa,eAAe;AACZ,yBAAwB,gBAAxB;AACP,0DAAY;AACf,eAAmBA,oBAAnB;AAPzB,aAAY;SAcVC,WAAa;EAAA;6BAAeC,MAAO;IAAGC;EAAC,GACvC;MACEC,UAAS;QAAOC,KAAI,EAAC,aAAUH;MAACI,gBAAQ;MAAwBA;IACjE;EACD;EACD;AAED;SAIEC;EACA;MACE,OAAOC,KAAI;IACZ;EACD;EACA;MACEC,UAAOD,KAAKE,MACVC,QAAK,SAACC;WAKFJ,IACE,OAAOK,eAAkB,SAAQ,QACjC,MAAOA,eAAkB,QAAQ,CACjC;UACA,OAAOC,aAAY;QACpB;MACD;MAEF,OAEHA;IACF;EACD;EACD;AAED;MAAmBC,SAAM,IAAE,QAAa,WAAS,EAAE,WAAW,WAE9D;;;;;;SAMQC,MAAO,GAAIC;EACjB,MAAMC,IAAI,GAAG,IAAID,GAAG,EAAE;EACtB,MAAME,WAASF,GAAG,EAAIA;EACtB,MAAMG,gBAAcH,GAA0C;EAE9D,oBAAuC;SACjCI;IACJ,IAAIC,QAAM,GAAG,IAAK;IAElB,IAAIC,MAAK,GAAI;QACXD,SAAS,OAAIC;MACbD,MAAME,GAAG,IAAI;MACb,MAAIR,GAAKS,GAAGF,CAACC,IAAI,MAAE;UACjBH,QAAQ,IAAG;QACZA,QAAM;aACLL;QACDA;MACF;IAED;IACA;YACEO,EAAKG;MACL,KAAK,OAAM;WACT,MAAIR;YACFG,QAAQ,GAAGK,KAAK;UACjBL,QAAM;eACLH;UACDA;QACD;QACF;WACE,MAAK;aACH,QAAMS,MAAQ,GAAGZ,SAAS,CAACa,MAAE;UAC7B,MAAMD,QAAOE,aAAcD,CAACD;UAE5B,IAAIA,QAAQ,eAAc,CAAEA;cAC1BA,QAAIR,KAAS,SAAKQ;gBAChBN,SAAQ,IAAG,SAAK;cACjBA,QAAM;mBACLF;cACDA;YACF;iBACC;YACA,MAAMW,WAAUP,EAAGH,cAAc,CAACO;YAClC,MAAKA,UAAQ,GAAKP,cAAWE,SAAWQ,SAAWL,GAAG,EAACM;gBACrDV,SAAQ,KAAG,MAAK;cACjBA,QAAM;mBACLS;cACAV,cAAc,CAACO,QAAQ,CAAC;cACzBP;YACF;UACF;QACD;QACH;IAAA;IAGF;EACF;AAED;;;;;AAQE,SAAQY,gBAAcC,qBAAK;EAC3B;IAAOC;EAAAA,SACJC;SAMCD,oBAAsB;IACtB,MACEE,MAAQC,KAAIC;QAIZF,OACIV,IAAI,SAAK,KACXa,aAAQ,IAAOH,OACf;MACA;MAAA;OAAqC,kCAA0B,EAAEI,0BACtCC,MAG3B,IAAMC,WAAW,mBAAQT,CAAKU,IAAI,GAAK;QACvCD,cAAS,WAAeA,OAAQT,KAAC,IAAO;QACxCS,QAAQ,CAAC,WAAUE,YAAS;QAE5BF;QACAA;QAEAA,+BAAY,QAACG;QACd;MACF;IACD;QACET;MACA;UACEG,MAAMO,aAAaP,IAAEN,OAAM,OACtB,2BAA2BA;QAEhCc,gBAEC,UADE,iDAAgDD,OAAU,iBAAC;QAE/D,IAAME,SAAU,UAAK,CAAM,iDAAqCF;aAC/DC,UAAQ,KAEP,MADC,IAACR;QAEJ;MACF;IACD;WAAkC;MAAGf;IACrC;EACL;AAED;;;;;AAKE,SAAMyB,WAAsC;EAAA,IAA9B;IAAAC;EAAGC,CAAU;EAC3B,MAAMC,WAAW,IAAGD,kBAA8B,YAAnBE,gBAAkB;EACjD,qBACE,yCAAO;SACLC,mBAAuB,QAAEC,cAAgB;IACzCH,uBAAaA,EAAWG;IACxBvB,WAAWwB,aAAqB;IAE/BN,SAEJ;EACF","names":["require","defaultHead","_react","charSet","head","name","content","onlyReactElement","list","child","concat","React","Children","fragmentChild","fragmentList","METATYPES","keys","Set","tags","metaTypes","metaCategories","isUnique","hasKey","h","key","has","type","metatype","i","hasOwnProperty","categories","category","inAmpMode","props","headChildrenElements","reduce","process","env","NODE_ENV","c","some","startsWith","newProps","url","undefined","cloneElement","srcMessage","warnOnce","_warnOnce","ampState","children","useContext","headManager","HeadManagerContext","reduceComponentsToState","reduceComponents","isInAmpMode"],"sources":["../../../src/shared/lib/head.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}